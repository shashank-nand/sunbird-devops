# This name is used to define the
# additionalScrapeConfigs name
# {{ fullnameOverride }}-prometheus-scrape-confg
# If you change this, make sure to update the value in
# additionalScrapeConfigs/defautls/main.yaml
#}

fullnameOverride: "sunbird-monitoring"

scrapeconfig:
  # This scrape config will enable us to annotate any pod and that pod will get automonitored
  #
  # annotations:
  #   prometheus.io/scrape: "true"
  #   prometheus.io/port: "2020"
  #   prometheus.io/path: /api/v1/metrics/prometheus
  #
  - job_name: staging/statsd-exporter/0
       honor_labels: true
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - staging
  scrape_interval: 30s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  relabel_configs:
  - action: keep
    source_labels:
    - __meta_kubernetes_service_label_app_kubernetes_io_instance
    regex: statsd-exporter
  - action: keep
    source_labels:
    - __meta_kubernetes_service_label_app_kubernetes_io_managed_by
    regex: Helm
  - action: keep
    source_labels:
    - __meta_kubernetes_service_label_app_kubernetes_io_name
    regex: statsd-exporter
  - action: keep
    source_labels:
    - __meta_kubernetes_service_label_app_kubernetes_io_version
    regex: 1.16.0
  - action: keep
    source_labels:
    - __meta_kubernetes_service_label_helm_sh_chart
    regex: statsd-exporter-0.1.0
  - action: keep
    source_labels:
    - __meta_kubernetes_endpoint_port_name
    regex: http
  - source_labels:
    - __meta_kubernetes_endpoint_address_target_kind
    - __meta_kubernetes_endpoint_address_target_name
    separator: ;
    regex: Node;(.*)
    replacement: ${1}
    target_label: node
  - source_labels:
    - __meta_kubernetes_endpoint_address_target_kind
    - __meta_kubernetes_endpoint_address_target_name
    separator: ;
    regex: Pod;(.*)
    replacement: ${1}
    target_label: pod
  - source_labels:
    - __meta_kubernetes_namespace
    target_label: namespace
  - source_labels:
    - __meta_kubernetes_service_name
    target_label: service
  - source_labels:
    - __meta_kubernetes_pod_name
    target_label: pod
  - source_labels:
    - __meta_kubernetes_service_name
    target_label: job
    replacement: ${1}
  - source_labels:
    - __meta_kubernetes_service_label_statsd_exporter
    target_label: job
    regex: (.+)
    replacement: ${1}
  - target_label: endpoint
    replacement: http
    
  - job_name: 'kubernetes-service-endpoints'
    kubernetes_sd_configs:
    - role: endpoints
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
      action: replace
      target_label: __scheme__
      regex: (https?)
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      target_label: __address__
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: kubernetes_name
  
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name

  - job_name: 'vm-node-exporter'
    static_configs:
      - targets: ["{{ groups['node-exporter'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:9100') | list | join("\", \"") }}"]

  - job_name: 'process-exporter'
    metrics_path: /metrics
    static_configs:
      - targets: ["{{ groups['process-exporter'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:9256' ) | list | join("\", \"") }}"]

  - job_name: 'cassandra-exporter'
    metrics_path: /metrics
    static_configs:
      - targets:  ["{{ groups['cassandra'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:8080' ) | list | join("\", \"") }}"]
      
{% if 'report-cassandra' in groups and groups['report-cassandra'] %}
  - job_name: 'report-cassandra-exporter'
    metrics_path: /metrics
    static_configs:
      - targets:  ["{{ groups['report-cassandra'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:8080' ) | list | join("\", \"") }}"]
{% endif %}

{% if 'druid' in groups and groups['druid'] %}
  - job_name: 'druid-exporter'
    metrics_path: /metrics
    static_configs:
      - targets:  ["{{ groups['druid'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:9108' ) | list | join("\", \"") }}"]
{% endif %}

  - job_name: 'redis_exporter_targets'
    static_configs:
      - targets: ["{{ groups['redis-exporter-targets'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:6379') | list | join("\", \"") }}"]
    metrics_path: /scrape
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: redis-exporter:9121

  - job_name: 'graylog'
    static_configs:
      - targets: ["{{ groups['graylog'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:9833') | list | join("\", \"") }}"]

  {% for item in service_blackbox_checks %}
  # This empty line ensures indentation is correct after ansible jinja2 template is materialized
  - job_name: 'availability_{{ item.service_name }}'
    metrics_path: /metrics
    params:
      module: [{{ item.probe_module }}]
    static_configs:
    - targets: {{ item.targets | to_json }}
      labels:
        "service_name": "{{ item.service_name }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter-prometheus-blackbox-exporter:9115
        {% endfor %}

  {% for item in service_health_checks %}
  # This empty line ensures indentation is correct after ansible jinja2 template is materialized
  - job_name: 'availability_service_{{ item.service_name }}'
    metrics_path: /probe
    params:
      jsonpath: [$.result]
    static_configs:
    - targets:
        - {{ item.targets }}
      labels:
        "service_name": "{{ item.service_name }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: json-path-exporter.monitoring.svc.cluster.local:7979
        {% endfor %}

namespace: "{{ namespace }}"
services:
  cassandra:
    port: 9042
    address: ["{{ groups['cassandra'] | join('","') }}"]
  keycloak:
    port: 8080
    address: ["{{ groups['keycloak'] | join('","') }}"]
  redis:
    port: 6379
    address: ["{{ groups['redis-cluster'] | join('","') }}"]
  kafka:
    port: 9092
    address: ["{{ groups['kafka'] | join('","') }}"]
  es:
    port: 9200
    address: ["{{ groups['es'] | join('","') }}"]
  {% if additional_blackbox_scrapeconfigs is defined and additional_blackbox_scrapeconfigs %}
  {{ additional_blackbox_scrapeconfigs | to_nice_yaml(indent=2) | indent( width=2) }}
  {% endif %}
